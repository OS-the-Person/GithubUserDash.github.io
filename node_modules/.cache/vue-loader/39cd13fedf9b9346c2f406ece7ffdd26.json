{"remainingRequest":"/Users/ostheperson/frontend projects/githubdash/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ostheperson/frontend projects/githubdash/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ostheperson/frontend projects/githubdash/src/App.vue","mtime":1593798849569},{"path":"/Users/ostheperson/frontend projects/githubdash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ostheperson/frontend projects/githubdash/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ostheperson/frontend projects/githubdash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ostheperson/frontend projects/githubdash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTZWFyY2ggZnJvbSAnLi9jb21wb25lbnRzL29zLVNlYXJjaC52dWUnCmltcG9ydCBDb250ZW50IGZyb20gJy4vY29tcG9uZW50cy9vcy1Db250ZW50LnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICdBcHAnLAoJY29tcG9uZW50czogewoJCVNlYXJjaCwKCQlDb250ZW50Cgl9LAoJZGF0YSAoKSB7CgkJcmV0dXJuIHsKCQkJcmVwb3MgOiBbXSwKCQkJYXZhdGFyX3NyYyA6ICIiLAoJCQluYW1lIDogIiIsCgkJCXVzZXJfdXJsIDogIiIsCgkJCXNlbGVjdGVkIDogIm5hbWUiLAoJCQlzb3J0X29wdGlvbnM6IFsKCQkJCXsgdmFsdWU6ICduYW1lJywgdGV4dDogJ05hbWUnIH0sCgkJCQl7IHZhbHVlOiAnc3RhcnMnLCB0ZXh0OiAnTnVtYmVyIG9mIHN0YXJzJyB9LAoJCQkJeyB2YWx1ZTogJ2xhc3RfY29tbWl0JywgdGV4dDogJ01vc3QgcmVjZW50IGNvbW1pdCcgfSwKCQkJCXsgdmFsdWU6ICdmb3JrcycsIHRleHQ6ICdOdW1iZXIgb2YgZm9ya3MnIH0KCQkJXSwKCQkJb3JkZXIgOiB0cnVlLAoJCQlvcmRlcl9vcHRpb25zIDogWwoJCQkJeyB2YWx1ZTogdHJ1ZSwgdGV4dDogJ0FzY2VuZGluZyBPcmRlcicgfSwKCQkJCXsgdmFsdWU6IGZhbHNlLCB0ZXh0OiAnRGVzY2VuZGluZyBPcmRlcicgfQoJCQldLAoJCQlzaG93IDogZmFsc2UsCgkJCXNob3dFcnIgOiBmYWxzZSwKCQkJZXhpc3QgOiBmYWxzZQoJCX0KCX0sCgljb21wdXRlZCA6IHsKCQlzb3J0ZWRSZXBvcyAoKSB7CgkJCWNvbnN0IHMgPSBbXS5jb25jYXQodGhpcy5yZXBvcyk7CgkJCXRoaXMuc29ydEFycihzLCB0aGlzLnNlbGVjdGVkKQoJCQlyZXR1cm4gczsKCQl9Cgl9LAoJbWV0aG9kczogeyAKCQlhc3luYyBnZXRSZXBvcyh1c2VybmFtZSkgewoJCQlsZXQgYXBpX3VybCA9ICJodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzLyIgKyB1c2VybmFtZQoJCQljb25zdCBoZWFkZXJzID0gewoJCQkJIkF1dGhvcml6YXRpb24iIDogYFRva2VuIDc5ODU2M2M3NGYxNjU1NDExNzdhNjVmZjZlMzFmYmU0NzljOGM0YWZgCgkJCX0KCQkJbGV0IHJlc3BvbmNlID0gYXdhaXQgZmV0Y2goYXBpX3VybCwgewoJCQkJIm1ldGhvZCIgOiAiR0VUIiwKCQkJCSJoZWFkZXJzIiA6IGhlYWRlcnMKCQkJfSkuY2F0Y2goKCkgPT4gewoJCQkJYWxlcnQoIkZhaWxlZCB0byBjb25uZWN0IHRvIHRoZSBBUEk6OiBDaGVjayB5b3VyIGludGVybmV0IGNvbm5lY3Rpb24iKQoJCQl9KQoJCQkvL2dldCBhdmF0YXIKCQkJbGV0IHJlcyA9IGF3YWl0IHJlc3BvbmNlLmpzb24oKQoJCQlsZXQgZGF0YSA9IHJlcwoJCQkKCQkJaWYgKGRhdGEubWVzc2FnZSA9PSAiTm90IEZvdW5kIil7CgkJCQl0aGlzLmV4aXN0ID0gZmFsc2UKCQkJCWNvbnNvbGUubG9nKCJ0aGUgdXNlcm5hbWU6OiIgKyBkYXRhLm1lc3NhZ2UgKyIgZG9lc24ndCBleGlzdCwgdHJ5IGFnYWluIGFuZCBjaGVjayB0eXBvIikKCQkJCXRoaXMuc2hvd0VyciA9IHRydWUKCQkJCXRoaXMuc2hvdyA9IGZhbHNlCgkJCQlyZXR1cm4KCQkJfQoJCQl0aGlzLnNob3dFcnIgPSBmYWxzZQoJCQkvL2NvbnNvbGUubG9nKCJpIHJhbiEhIikKCQkJdGhpcy5uYW1lID0gZGF0YS5uYW1lCgkJCXRoaXMuYXZhdGFyX3NyYyA9IGRhdGEuYXZhdGFyX3VybAoJCQl0aGlzLnVzZXJfdXJsID0gZGF0YS5odG1sX3VybAoJCQkvL2NvbnNvbGUubG9nKHRoaXMudXNlcl91cmwpCgkJCQoJCQlhcGlfdXJsID0gImh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vdXNlcnMvIiArIHVzZXJuYW1lICsgICIvcmVwb3MiCgkJCQoJCQlyZXNwb25jZSA9IGF3YWl0IGZldGNoKGFwaV91cmwsIHsKCQkJCSJtZXRob2QiIDogIkdFVCIsCgkJCQkiaGVhZGVycyIgOiBoZWFkZXJzCgkJCX0pCgkJCQoJCQkKCQkJcmVzID0gYXdhaXQgcmVzcG9uY2UuanNvbigpCgkJCS8vbGV0IHVzZXJfaWQgPSByZXMuaWQKCQkJLy9sZXQgbm9fb2ZfcHVibGljX3JlcG9zID0gcmVzLnB1YmxpY19yZXBvcwoJCQlsZXQgcmVwb3NfbGlzdCA9IHJlcwoJCQlsZXQgbGlzdF9vZl9yZXBvcyA9IFtdCgoJCQkvL2NvbnNvbGUubG9nKHJlcG9zX2xpc3RbMF0ubmFtZSkKCQkJcmVwb3NfbGlzdC5mb3JFYWNoKHJlcG8gPT4gewoJCQkJCgkJCQkvL2NvbnNvbGUubG9nKHJlcG8uc3RhcmdhemVyc19jb3VudCkKCQkJCWxldCBvYmpqID0gewoJCQkJCVsibmFtZSJdIDogcmVwby5uYW1lLAoJCQkJCVsic3RhcnMiXSA6IHJlcG8uc3RhcmdhemVyc19jb3VudCwKCQkJCQlbImRlc2NyaXB0aW9uIl0gOiByZXBvLmRlc2NyaXB0aW9uLAoJCQkJCVsibGFzdF9jb21taXQiXSA6IG5ldyBEYXRlKHJlcG8ucHVzaGVkX2F0KSwKCQkJCQlbInVybCJdIDogcmVwby5odG1sX3VybCwKCQkJCQlbImZvcmtzIl0gOiByZXBvLmZvcmtzLAoJCQkJCVsiZm9ya2VkIl0gOiByZXBvLmZvcmsKCQkJCX0KCQkJCWlmICAob2Jqai5kZXNjcmlwdGlvbiAhPSBudWxsICYmIG9iamouZGVzY3JpcHRpb24ubGVuZ3RoID4gNTApCgkJCQkJb2Jqai5kZXNjcmlwdGlvbiA9IG9iamouZGVzY3JpcHRpb24uc3Vic3RyKDAsNTApICsgIi4uLiIKCQkJCWxpc3Rfb2ZfcmVwb3MucHVzaChvYmpqKQoJCQl9KQoJCQl0aGlzLnJlcG9zID0gbGlzdF9vZl9yZXBvcwoJCQl0aGlzLmV4aXN0ID0gdHJ1ZQoJCQl0aGlzLnNob3cgPSB0cnVlCgkJCS8vY29uc29sZS5sb2cobGlzdF9vZl9yZXBvcykKCQl9LAoJCWNsZWFyKCkgewoJCQl0aGlzLnNob3cgPSBmYWxzZQoJCQl0aGlzLnNob3dFcnIgPSBmYWxzZQoJCQl0aGlzLmV4aXN0ID0gZmFsc2UKCQl9LAoJCXNvcnRBcnIgKGFyciwgdmFsKSB7CgkJCWFyci5zb3J0KChhLCBiKSA9PiB7CgkJCQlpZiAodmFsID09ICJuYW1lIiAmJiB0aGlzLm9yZGVyID09IGZhbHNlKQoJCQkJCXJldHVybiAoYVt2YWxdID4gYlt2YWxdKSA/IDEgOiAtMS8vbG93ZXN0IHRvIGhpZ2ggLSBmYWxzZQoJCQkJZWxzZSBpZiAodmFsID09ICJuYW1lIiAmJiB0aGlzLm9yZGVyID09IHRydWUpCgkJCQkJcmV0dXJuIChhW3ZhbF0gPiBiW3ZhbF0pID8gLTEgOiAxLy90cnVlIC0gaGlnaGVzdCB0byBsb3cKCQkJCWVsc2UgaWYgKHRoaXMub3JkZXIgPT0gZmFsc2UpCgkJCQkJcmV0dXJuIChhW3ZhbF0gPiBiW3ZhbF0pID8gMSA6IC0xLy9sb3dlc3QgdG8gaGlnaCAtIGZhbHNlCgkJCQllbHNlIAoJCQkJCXJldHVybiAoYVt2YWxdID4gYlt2YWxdKSA/IC0xIDogMS8vdHJ1ZSAtIGhpZ2hlc3QgdG8gbG93CgkJCX0pCgkJfQoJfSwKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n\t<div id=\"app\">\n\t\t<div id=\"mainContainer\">\n\t\t\t<header class=\"os-Header\">\n\t\t\t\t<h3>Github User Repo Dashboard</h3>\n\t\t\t</header>\n\t\t\t<div id=container>\n\t\t\t\t<Search :exist=\"exist\" @osSearch=\"getRepos\" @clear=\"clear\"/>\n\t\t\t\t<div v-show=\"show\">\t\t\n\t\t\t\t\t<a id=\"os-profile\" :href=\"user_url\">\n\t\t\t\t\t\t<img class=\"os-image\" :src=\"avatar_src\" alt=\"Avatar\"/>\n\t\t\t\t\t\t{{ name }}\n\t\t\t\t\t</a>\n\t\t\t\t\t<div class=\"head-sort\">\n\t\t\t\t\t\t<b-form inline>\n\t\t\t\t\t\t\t<label class=\"mr-sm-2 os-label\" for=\"inline-form-custom-select-pref\">Sort By</label>\n\t\t\t\t\t\t\t<b-form-select class=\"os-sort-input\" v-model=\"selected\" :options=\"sort_options\" ></b-form-select>\n\t\t\t\t\t\t\t<label class=\"mr-sm-2 os-label\" for=\"inline-form-custom-select-pref\">Order</label>\n\t\t\t\t\t\t\t<b-form-select v-model=\"order\" :options=\"order_options\" ></b-form-select>\n\t\t\t\t\t\t</b-form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Content v-show=\"show\" :repos=\"sortedRepos\"/>\n\t\t\t</div>\n\t\t\t<div v-show=\"!show\" >\n\t\t\t\t<h5>Enter a GitHub username to see repositories</h5>\n\t\t\t</div>\n\t\t\t<div v-show=\"showErr\">\n\t\t\t\t<h5>Have you entered a valid username?</h5>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n\n<script>\nimport Search from './components/os-Search.vue'\nimport Content from './components/os-Content.vue'\n\nexport default {\n\tname: 'App',\n\tcomponents: {\n\t\tSearch,\n\t\tContent\n\t},\n\tdata () {\n\t\treturn {\n\t\t\trepos : [],\n\t\t\tavatar_src : \"\",\n\t\t\tname : \"\",\n\t\t\tuser_url : \"\",\n\t\t\tselected : \"name\",\n\t\t\tsort_options: [\n\t\t\t\t{ value: 'name', text: 'Name' },\n\t\t\t\t{ value: 'stars', text: 'Number of stars' },\n\t\t\t\t{ value: 'last_commit', text: 'Most recent commit' },\n\t\t\t\t{ value: 'forks', text: 'Number of forks' }\n\t\t\t],\n\t\t\torder : true,\n\t\t\torder_options : [\n\t\t\t\t{ value: true, text: 'Ascending Order' },\n\t\t\t\t{ value: false, text: 'Descending Order' }\n\t\t\t],\n\t\t\tshow : false,\n\t\t\tshowErr : false,\n\t\t\texist : false\n\t\t}\n\t},\n\tcomputed : {\n\t\tsortedRepos () {\n\t\t\tconst s = [].concat(this.repos);\n\t\t\tthis.sortArr(s, this.selected)\n\t\t\treturn s;\n\t\t}\n\t},\n\tmethods: { \n\t\tasync getRepos(username) {\n\t\t\tlet api_url = \"https://api.github.com/users/\" + username\n\t\t\tconst headers = {\n\t\t\t\t\"Authorization\" : `Token 798563c74f165541177a65ff6e31fbe479c8c4af`\n\t\t\t}\n\t\t\tlet responce = await fetch(api_url, {\n\t\t\t\t\"method\" : \"GET\",\n\t\t\t\t\"headers\" : headers\n\t\t\t}).catch(() => {\n\t\t\t\talert(\"Failed to connect to the API:: Check your internet connection\")\n\t\t\t})\n\t\t\t//get avatar\n\t\t\tlet res = await responce.json()\n\t\t\tlet data = res\n\t\t\t\n\t\t\tif (data.message == \"Not Found\"){\n\t\t\t\tthis.exist = false\n\t\t\t\tconsole.log(\"the username::\" + data.message +\" doesn't exist, try again and check typo\")\n\t\t\t\tthis.showErr = true\n\t\t\t\tthis.show = false\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.showErr = false\n\t\t\t//console.log(\"i ran!!\")\n\t\t\tthis.name = data.name\n\t\t\tthis.avatar_src = data.avatar_url\n\t\t\tthis.user_url = data.html_url\n\t\t\t//console.log(this.user_url)\n\t\t\t\n\t\t\tapi_url = \"https://api.github.com/users/\" + username +  \"/repos\"\n\t\t\t\n\t\t\tresponce = await fetch(api_url, {\n\t\t\t\t\"method\" : \"GET\",\n\t\t\t\t\"headers\" : headers\n\t\t\t})\n\t\t\t\n\t\t\t\n\t\t\tres = await responce.json()\n\t\t\t//let user_id = res.id\n\t\t\t//let no_of_public_repos = res.public_repos\n\t\t\tlet repos_list = res\n\t\t\tlet list_of_repos = []\n\n\t\t\t//console.log(repos_list[0].name)\n\t\t\trepos_list.forEach(repo => {\n\t\t\t\t\n\t\t\t\t//console.log(repo.stargazers_count)\n\t\t\t\tlet objj = {\n\t\t\t\t\t[\"name\"] : repo.name,\n\t\t\t\t\t[\"stars\"] : repo.stargazers_count,\n\t\t\t\t\t[\"description\"] : repo.description,\n\t\t\t\t\t[\"last_commit\"] : new Date(repo.pushed_at),\n\t\t\t\t\t[\"url\"] : repo.html_url,\n\t\t\t\t\t[\"forks\"] : repo.forks,\n\t\t\t\t\t[\"forked\"] : repo.fork\n\t\t\t\t}\n\t\t\t\tif  (objj.description != null && objj.description.length > 50)\n\t\t\t\t\tobjj.description = objj.description.substr(0,50) + \"...\"\n\t\t\t\tlist_of_repos.push(objj)\n\t\t\t})\n\t\t\tthis.repos = list_of_repos\n\t\t\tthis.exist = true\n\t\t\tthis.show = true\n\t\t\t//console.log(list_of_repos)\n\t\t},\n\t\tclear() {\n\t\t\tthis.show = false\n\t\t\tthis.showErr = false\n\t\t\tthis.exist = false\n\t\t},\n\t\tsortArr (arr, val) {\n\t\t\tarr.sort((a, b) => {\n\t\t\t\tif (val == \"name\" && this.order == false)\n\t\t\t\t\treturn (a[val] > b[val]) ? 1 : -1//lowest to high - false\n\t\t\t\telse if (val == \"name\" && this.order == true)\n\t\t\t\t\treturn (a[val] > b[val]) ? -1 : 1//true - highest to low\n\t\t\t\telse if (this.order == false)\n\t\t\t\t\treturn (a[val] > b[val]) ? 1 : -1//lowest to high - false\n\t\t\t\telse \n\t\t\t\t\treturn (a[val] > b[val]) ? -1 : 1//true - highest to low\n\t\t\t})\n\t\t}\n\t},\n}\n</script>\n\n<style>\n#app {\n\tfont-family: Avenir, Helvetica, Arial, sans-serif;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\ttext-align: center;\n\tcolor: #2c3e50;\n\tmargin: 0px;\n\tfont-size: 15px;\n\tpadding: 0px;\n}\n\n.head-sort {\n\twidth: fit-content;\n\tmargin: auto;\n}\n\na#os-profile {\n\ttext-decoration-line: none;\n\tcolor: black;\n\tfont-size: 1.5em;\n}\n\n.head-sort .os-label {\n\tmargin-left: 10px;\n}\n\n#mainContainer {\n\tmargin: auto;\n\tpadding-top: 20px;\n\tmin-width: fit-content;\n\twidth: 70%;\n}\n\n#container {\n\tpadding-top: 20px;\n\twidth: 80%;\n\tmargin: auto;\n}\n\n.os-image {\n\twidth: 64px;\n\theight: 64px;\n\tborder: 1px solid black;\n\tmargin: 10px;\n\tborder-radius: 50%;\n}\n</style>\n"]}]}